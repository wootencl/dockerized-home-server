version: "3.7"

########################### 
#   NETWORKS
###########################
networks:
  traefik_proxy:
    name: traefik_proxy
    driver: bridge
  default:
    driver: bridge

########################### 
#   SERVICES
###########################
services:

  ########################### 
  #   FRONT ENDS
  ###########################

  # Traefik - Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik:cantal
    restart: always
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entryPoints.traefik.address=:8080
      - --api=true
      - --log=true
      - --log.level=INFO
      - --accessLog=true
      - --accessLog.filePath=/var/log/docker/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=traefik_proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
      - --certificatesResolvers.dns-cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
    networks:
      - default
      - traefik_proxy
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      # - ./traefik/rules:/rules # file provider directory
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme/acme.json:/acme.json
      - ./traefik/traefik.log:/var/log/docker/traefik.log
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.tls=true"
      - "traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare"
      ## Middlewares
      # - "traefik.http.routers.traefik-rtr.middlewares=traefik-headers,rate-limit@file,oauth@file"
      # - "traefik.http.middlewares.traefik-headers.headers.accesscontrolallowmethods=GET, OPTIONS, PUT"
      # - "traefik.http.middlewares.traefik-headers.headers.accesscontrolalloworigin=https://${DOMAIN_NAME}"
      # - "traefik.http.middlewares.traefik-headers.headers.accesscontrolmaxage=100"
      # - "traefik.http.middlewares.traefik-headers.headers.addvaryheader=true"
      # - "traefik.http.middlewares.traefik-headers.headers.allowedhosts=${DOMAIN_NAME}"
      # - "traefik.http.middlewares.traefik-headers.headers.hostsproxyheaders=X-Forwarded-Host"
      # - "traefik.http.middlewares.traefik-headers.headers.sslredirect=true"
      # - "traefik.http.middlewares.traefik-headers.headers.sslhost=${DOMAIN_NAME}"
      # - "traefik.http.middlewares.traefik-headers.headers.sslforcehost=true"
      # - "traefik.http.middlewares.traefik-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
      # - "traefik.http.middlewares.traefik-headers.headers.stsseconds=63072000"
      # - "traefik.http.middlewares.traefik-headers.headers.stsincludesubdomains=true"
      # - "traefik.http.middlewares.traefik-headers.headers.stspreload=true"
      # - "traefik.http.middlewares.traefik-headers.headers.forcestsheader=true"
      # - "traefik.http.middlewares.traefik-headers.headers.framedeny=true"
      # - "traefik.http.middlewares.traefik-headers.headers.customFrameOptionsValue='allow-from https://${DOMAIN_NAME}'"
      # - "traefik.http.middlewares.traefik-headers.headers.contenttypenosniff=true"
      # - "traefik.http.middlewares.traefik-headers.headers.browserxssfilter=true"
      # - "traefik.http.middlewares.traefik-headers.headers.referrerpolicy=same-origin"
      # - "traefik.http.middlewares.traefik-headers.headers.featurepolicy=camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
      # - "traefik.http.middlewares.traefik-headers.headers.customresponseheaders.X-Robots-Tag=none,noarchive,nosnippet,notranslate,noimageindex,"
  # Google OAuth - Single Sign On using OAuth 2.0
  # oauth:
  #   container_name: oauth
  #   image: lbischof/traefik-forward-auth
  #   restart: always
  #   networks:
  #     - traefik_proxy
  #   environment:
  #     - CLIENT_ID=${GOOGLE_CLIENT_ID}
  #     - CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
  #     - SECRET=${OAUTH_SECRET}
  #     - COOKIE_DOMAIN=${DOMAIN_NAME}
  #     - INSECURE_COOKIE=false
  #     - AUTH_HOST=oauth.${DOMAIN_NAME}
  #     - URL_PATH=/_oauth
  #     - WHITELIST=${MY_EMAIL}
  #     - LOG_LEVEL=info
  #     - LOG_FORMAT=text
  #     - LIFETIME=2592000 # 30 days
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.oauth-rtr.entrypoints=https"
  #     - "traefik.http.routers.oauth-rtr.rule=Host(`oauth.${DOMAIN_NAME}`)"
  #     - "traefik.http.routers.oauth-rtr.tls=true"
  #     - "traefik.http.routers.oauth-rtr.tls.certresolver=dns-cloudflare"
  #     ## Middlewares
  #     - "traefik.http.routers.oauth-rtr.middlewares=secure-chain@file"
  #     ## HTTP Services
  #     - "traefik.http.routers.oauth-rtr.service=oauth-svc"
  #     - "traefik.http.services.oauth-svc.loadbalancer.server.port=${OAUTH_PORT}"

  ########################### 
  #   DOWNLOADER
  ###########################

  # qBittorrent - Torrent downloader
  qbittorrent:
    image: wootencl/pia-qbit
    container_name: qbit
    restart: always
    networks:
      - traefik_proxy
      - default
    volumes:
      - ${DOWNLOADS_DIRECTORY}:/downloads
    environment:
      REGION: US East
      PROTOCOL: tcp
      USER: ${PIA_USER}
      PASSWORD: ${PIA_PASSWORD}
      DNS_SERVERS: 8.8.8.8, 8.8.4.4
      WEBUI_PORT: 9001
    cap_add:
      - NET_ADMIN
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.qbit-rtr.entrypoints=https"
      - "traefik.http.routers.qbit-rtr.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/qbit`)"
      - "traefik.http.routers.qbit-rtr.middlewares=qbit-rtr-stripprefix"
      - "traefik.http.middlewares.qbit-rtr-stripprefix.stripprefix.prefixes=/qbit"
      - "traefik.http.routers.qbit-rtr.tls=true"
      - "traefik.http.routers.qbit-rtr.tls.certresolver=dns-cloudflare"
      ## Middlewares
      - "traefik.http.routers.qbit-rtr.middlewares=rate-limit@file"
      ## HTTP Services
      - "traefik.http.routers.qbit-rtr.service=qbit-svc"
      - "traefik.http.services.qbit-svc.loadbalancer.server.port=9001"